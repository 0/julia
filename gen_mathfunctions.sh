echo "# This file is autogenerated using gen_mathfunctions.sh\n"

if [ `uname` == "Linux" ]; then
    echo "libm = dlopen("libm.so.6")"
fi

if [ `uname` == "Darwin" ]; then
    echo "libm = dlopen(\"libm.dylib\")"
fi

echo "\n"

for func in sin cos tan sinh cosh tanh asin acos atan log log10 log1p exp expm1 erf floor ceil sqrt cbrt rint; do
    echo "# $func"
    echo "${func}_func = dlsym(libm,\"$func\")"
    echo "${func}f_func = dlsym(libm,\"${func}f\")"
    echo "$func(x::Float64) = ccall(${func}_func, Float64, (Float64,), x)"
    echo "$func(x::Float32) = ccall(${func}f_func, Float32, (Float32,), x)"
    echo "$func(x::Vector) = [ $func(x[i]) | i=1:length(x) ]"
    echo "$func(x::Matrix) = [ $func(x[i,j]) | i=1:size(x,1), j=1:size(x,2) ]"
    echo "\n"
done

echo "# abs"
echo "abs_func = dlsym(libm,\"abs\")"
echo "fabs_func = dlsym(libm,\"fabs\")"
echo "abs(x::Float64) = ccall(abs_func, Float64, (Float64,), x)"
echo "abs(x::Float32) = ccall(fabs_func, Float32, (Float32,), x)"
echo "$func(x::Vector) = [ $func(x[i]) | i=1:length(x) ]"
echo "$func(x::Matrix) = [ $func(x[i,j]) | i=1:size(x,1), j=1:size(x,2) ]"
echo "\n"

for func in atan2 pow remainder copysign hypot; do
    echo "# $func"
    echo "${func}_func = dlsym(libm,\"$func\")"
    echo "${func}f_func = dlsym(libm,\"${func}f\")"
    echo "$func(x::Float64, y::Float64) = ccall(${func}_func, Float64, (Float64, Float64,), x, y)"
    echo "$func(x::Float32, y::Float32) = ccall(${func}f_func, Float32, (Float32,Float32), x, y)"
    echo "\n"
done

for func in isinf isnan; do
    echo "# $func"
    echo "${func}_func = dlsym(libm,\"$func\")"
    echo "$func(x::Float64) = ccall(${func}_func, Int32, (Float64,), x)"
    echo "$func(x::Float32) = ccall(${func}_func, Int32, (Float32,), x)"
    echo "$func(x::Vector) = [ $func(x[i]) | i=1:length(x) ]"
    echo "$func(x::Matrix) = [ $func(x[i,j]) | i=1:size(x,1), j=1:size(x,2) ]"
    echo "\n"
done
