v0.1
Goal: Release first non-prototype implementation to friends 4/2/2010.
goals for Weeks ending
2/5:  base type constructors and object model in C (scheme lines 1-296)
2/12: type instantiation, subtype, conform predicates (lines 296-582)
2/19: method table, generic function (lines 582-798)
2/26: global environment, simple builtins (lines 798-907,1079-1269)
3/5:  scm parser/frontend interface, print, RPL (read-print loop)
3/12: finish parser interface, start llvm interface
3/19: llvm bootcamp and experiments
3/26: code generation (for the dynamic subset of the language)
4/2:  more code generation work, fixes

the last 3 weeks are the riskiest, and likely to slip by a week or two

for the next release we add the remaining critical features:

v0.2 - estimate 7/1/2010 or 8/1/2010
- begin testing and benchmarking
- modules
- optional and keyword args
- get indexing and array comprehensions fully in shape
- begin type inference, inlining, and unboxing optimizations
- simple task-parallel computing
- exceptions

v0.5 - estimate 10/1/2010
- more optimizations
- get as many as possible of the 184 important functions
- work on errors and robustness
- more parallelism

v1.0 - 2/1/2011 or before, in time for 18.337!
- more parallelism
